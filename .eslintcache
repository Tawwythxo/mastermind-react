[{"D:\\HS Ansbach Studium\\3.Semester\\Webdev\\mastermind-react\\src\\index.js":"1","D:\\HS Ansbach Studium\\3.Semester\\Webdev\\mastermind-react\\src\\reportWebVitals.js":"2","D:\\HS Ansbach Studium\\3.Semester\\Webdev\\mastermind-react\\src\\App.js":"3","D:\\HS Ansbach Studium\\3.Semester\\Webdev\\mastermind-react\\src\\Pin\\Pin.js":"4","D:\\HS Ansbach Studium\\3.Semester\\Webdev\\mastermind-react\\src\\model\\model.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1444,"mtime":1612276860835,"results":"9","hashOfConfig":"7"},{"size":430,"mtime":1612276811531,"results":"10","hashOfConfig":"7"},{"size":1558,"mtime":1612275175422,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ye72zs",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"D:\\HS Ansbach Studium\\3.Semester\\Webdev\\mastermind-react\\src\\index.js",[],["24","25"],"D:\\HS Ansbach Studium\\3.Semester\\Webdev\\mastermind-react\\src\\reportWebVitals.js",[],"D:\\HS Ansbach Studium\\3.Semester\\Webdev\\mastermind-react\\src\\App.js",["26","27","28","29","30","31","32","33","34"],"D:\\HS Ansbach Studium\\3.Semester\\Webdev\\mastermind-react\\src\\Pin\\Pin.js",[],"D:\\HS Ansbach Studium\\3.Semester\\Webdev\\mastermind-react\\src\\model\\model.js",["35","36","37","38","39","40","41","42","43","44"],"\r\nimport { cloneDeep } from 'lodash';\r\nimport * as defaultLogic from 'testmastermind/src/mastermind'\r\nimport { FITS, PARTIALLY, WRONG } from \"testmastermind/src/hints\";\r\nimport * as colors from 'testmastermind/src/colors';\r\nconst { RED, BLUE, YELLOW, GREEN, PURPLE, ORANGE, PINK, BROWN } = colors;\r\n\r\n\r\n\r\nexport function initialModel(logic = defaultLogic) {\r\n    const randomCode = logic.generateCode(Math.random); \r\n\r\n    return {\r\n        assumedColors: [RED, RED, RED, RED],\r\n        rounds: [],\r\n        code: randomCode,\r\n    }\r\n}\r\n\r\nexport function createModel(model, setModel, logic = defaultLogic) {\r\n    return {\r\n      \r\n        getAssumedColor: (index) => model.assumedColors[index],\r\n        changeColor: (index) => {\r\n          \r\n            const newModel = cloneDeep(model)\r\n            let colorList = Object.keys(colors)\r\n            colorList = colorList.slice(0, colorList.length - 1)\r\n            const colorIndex = colorList.findIndex((c) => { return model.assumedColors[index] === c })\r\n            const newColorIndex = (colorIndex < colorList.length - 1) ? colorIndex + 1 : 0;\r\n\r\n            newModel.assumedColors[index] = colorList[newColorIndex];\r\n            setModel(newModel);\r\n        },\r\n        check: () => {\r\n            const newModel = cloneDeep(model)\r\n            newModel.rounds.push({\r\n                round: 1,\r\n                assumedColors: model.assumedColors,\r\n                result: logic.checkCode(newModel.code, newModel.assumedColors)\r\n            })\r\n\r\n            setModel(newModel)\r\n        }\r\n    }\r\n}\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":12},{"ruleId":"49","severity":1,"message":"53","line":5,"column":10,"nodeType":"51","messageId":"52","endLine":5,"endColumn":13},{"ruleId":"49","severity":1,"message":"54","line":5,"column":15,"nodeType":"51","messageId":"52","endLine":5,"endColumn":20},{"ruleId":"49","severity":1,"message":"55","line":5,"column":22,"nodeType":"51","messageId":"52","endLine":5,"endColumn":28},{"ruleId":"49","severity":1,"message":"56","line":5,"column":30,"nodeType":"51","messageId":"52","endLine":5,"endColumn":34},{"ruleId":"49","severity":1,"message":"57","line":5,"column":36,"nodeType":"51","messageId":"52","endLine":5,"endColumn":42},{"ruleId":"49","severity":1,"message":"58","line":5,"column":44,"nodeType":"51","messageId":"52","endLine":5,"endColumn":50},{"ruleId":"49","severity":1,"message":"59","line":5,"column":52,"nodeType":"51","messageId":"52","endLine":5,"endColumn":56},{"ruleId":"49","severity":1,"message":"60","line":5,"column":58,"nodeType":"51","messageId":"52","endLine":5,"endColumn":63},{"ruleId":"49","severity":1,"message":"61","line":4,"column":10,"nodeType":"51","messageId":"52","endLine":4,"endColumn":14},{"ruleId":"49","severity":1,"message":"62","line":4,"column":16,"nodeType":"51","messageId":"52","endLine":4,"endColumn":25},{"ruleId":"49","severity":1,"message":"63","line":4,"column":27,"nodeType":"51","messageId":"52","endLine":4,"endColumn":32},{"ruleId":"49","severity":1,"message":"64","line":6,"column":14,"nodeType":"51","messageId":"52","endLine":6,"endColumn":18},{"ruleId":"49","severity":1,"message":"65","line":6,"column":20,"nodeType":"51","messageId":"52","endLine":6,"endColumn":26},{"ruleId":"49","severity":1,"message":"66","line":6,"column":28,"nodeType":"51","messageId":"52","endLine":6,"endColumn":33},{"ruleId":"49","severity":1,"message":"67","line":6,"column":35,"nodeType":"51","messageId":"52","endLine":6,"endColumn":41},{"ruleId":"49","severity":1,"message":"68","line":6,"column":43,"nodeType":"51","messageId":"52","endLine":6,"endColumn":49},{"ruleId":"49","severity":1,"message":"69","line":6,"column":51,"nodeType":"51","messageId":"52","endLine":6,"endColumn":55},{"ruleId":"49","severity":1,"message":"70","line":6,"column":57,"nodeType":"51","messageId":"52","endLine":6,"endColumn":62},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'RED' is defined but never used.","'GREEN' is defined but never used.","'YELLOW' is defined but never used.","'BLUE' is defined but never used.","'PURPLE' is defined but never used.","'ORANGE' is defined but never used.","'PINK' is defined but never used.","'BROWN' is defined but never used.","'FITS' is defined but never used.","'PARTIALLY' is defined but never used.","'WRONG' is defined but never used.","'BLUE' is assigned a value but never used.","'YELLOW' is assigned a value but never used.","'GREEN' is assigned a value but never used.","'PURPLE' is assigned a value but never used.","'ORANGE' is assigned a value but never used.","'PINK' is assigned a value but never used.","'BROWN' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]